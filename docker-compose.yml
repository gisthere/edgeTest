version: "3"

services:
  sensor:
    build: sensor/
    volumes:
      - ./sensor/:/app
    depends_on:
      - controller
#  manipulator:
#    build: manipulator/
#
#  web:
#    build: webServer/
#    ports:
#      - 80:8080
#      -

  controller-db:
    image: postgres:10.4-alpine
    environment:
      POSTGRES_DB: "main"
      POSTGRES_USER: "main"
      POSTGRES_PASSWORD: "main"
    restart: "no"
    volumes:
      - "db:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3

  controller-redis:
    image: 'redis:3.2.0-alpine'
    restart: "no"

  controller-celery-worker:
    build: controller/
    command: celery -A app.celery worker -l info
    restart: "no"

    volumes:
      - ./controller:/app
    depends_on:
      - controller-redis

  controller-celery-beat:
    build: controller/
    command: celery -A app.celery beat -l info --max-interval 1
    volumes:
      - ./controller:/app
    depends_on:
      - controller-redis


  controller:
    build: controller/
    command: bash -c "python manage.py db upgrade && python manage.py runserver"
    volumes:
      - ./controller/:/app
    depends_on:
      - controller-db
      - controller-redis
volumes:
  db:
